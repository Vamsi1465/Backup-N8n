{
  "createdAt": "2025-10-28T20:43:59.194Z",
  "updatedAt": "2025-10-28T20:57:21.000Z",
  "id": "9IJ0vzzs9Qa4qW9Q",
  "name": "Coaches (Lead Qualification System) 2",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -4816,
        640
      ],
      "id": "d2cbb01f-fc3a-44fb-83e3-4c6a1e445310",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "Gq3qNdXZmlzVb7Jg",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "05cfe1ee-5847-4230-ba6c-de993b325837",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        -5456,
        384
      ],
      "id": "b2d79a3f-764e-4f64-8dbe-004a1ee54a9f",
      "name": "After Filling Onboarding Form",
      "webhookId": "05cfe1ee-5847-4230-ba6c-de993b325837"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "55038c71-ed88-44df-93b6-d9ced1c15917",
              "name": "body.name",
              "value": "={{ $json.body.name }}",
              "type": "string"
            },
            {
              "id": "bb965d7e-edcc-4b2d-a4df-02339b476978",
              "name": "body.email",
              "value": "={{ $json.body.email }}",
              "type": "string"
            },
            {
              "id": "900e0686-9340-43a0-91d9-d47d0c9b9075",
              "name": "body.phone",
              "value": "={{ $json.body.phone }}",
              "type": "string"
            },
            {
              "id": "2cefa5da-267a-460a-8062-cd521e31d93e",
              "name": "body.problem",
              "value": "={{ $json.body.problem }}",
              "type": "string"
            },
            {
              "id": "09992b99-c092-4bb7-9e25-35e44c141cbf",
              "name": "body.goal",
              "value": "={{ $json.body.goal }}",
              "type": "string"
            },
            {
              "id": "037064f6-db29-422a-a399-c9fef0f05da3",
              "name": "body.budget",
              "value": "={{ $json.body.budget }}",
              "type": "string"
            },
            {
              "id": "4543abc4-ae84-47c4-b142-bfbab660ba16",
              "name": "body.timeline",
              "value": "={{ $json.body.timeline }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -5232,
        384
      ],
      "id": "b14234b9-2975-426f-9779-da650b03831a",
      "name": "Edit all Required Fields"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.body.problem }}, {{ $json.body.problem }} ,{{ $json.body.budget }}, {{ $json.body.timeline }}",
        "options": {
          "systemMessage": "=You are an expert Lead Qualification Analyst for a coaching business.\n\nYour job is to analyze incoming form submissions from potential leads and extract qualification signals that help determine how ready, capable, and serious the lead is.\n\nAnalyze the provided form data and respond ONLY with a JSON object in the following structure:\n\n{\n  \"pain_level\": <number 1-10>,\n  \"urgency_score\": <number 1-10>,\n  \"budget_signals\": <number 0-10>,\n  \"commitment_indicators\": <number 0-10>,\n  \"emotional_tone\": \"<positive/neutral/negative/desperate>\",\n  \"key_problem\": \"<one sentence summary>\",\n  \"urgency_keywords\": [\"<list of urgency words found>\"],\n  \"budget_keywords\": [\"<list of budget-related words>\"],\n  \"question_type\": \"<problem/pricing/availability/general>\",\n  \"response_recommendation\": \"<suggest_call/send_info/qualify_more/disqualify>\",\n  \"reasoning\": \"<brief explanation of scores>\"\n}\n\n**Input Fields to Analyze:**\n- Lead Name: {{ $json.body.name }}\n- Lead Email: {{ $json.body.email }}\n- Lead Phone: {{ $json.body.phone }}\n- Problem Description: {{ $json.body.problem }}\n- Goal / Desired Outcome: {{ $json.body.goal }}\n- Budget: {{ $json.body.budget }}\n- Timeline: {{ $json.body.timeline }}\n\n**Scoring Guidelines:**\n- Pain Level: How severe is their problem? (1 = minor annoyance, 10 = critical crisis)\n- Urgency Score: How soon do they need help? (1 = someday, 10 = RIGHT NOW)\n- Budget Signals: Mentions or selection of spending ability or readiness to invest (0 = no mention, 10 = ready to invest)\n- Commitment Indicators: Signs of action readiness (0 = unsure / just exploring, 10 = ready to start)\n- Emotional Tone: Identify tone as positive / neutral / negative / desperate.\n- Question Type: Categorize based on the nature of their message — problem, pricing, availability, or general.\n- Response Recommendation: Suggest the next best step — suggest_call, send_info, qualify_more, or disqualify.\n\n**Your Task:**\n1. Read the form fields carefully.\n2. Identify clear signals of pain, urgency, budget, and commitment.\n3. Infer emotional tone and intent from wording and goals.\n4. Output the structured JSON with accurate numeric values and a short reasoning.\n\n**Example Style:**\nInput Problem: “I’m struggling to get consistent coaching clients and need help fast.”\nOutput JSON:\n{\n  \"pain_level\": 8,\n  \"urgency_score\": 9,\n  \"budget_signals\": 6,\n  \"commitment_indicators\": 8,\n  \"emotional_tone\": \"desperate\",\n  \"key_problem\": \"Lead is struggling with inconsistent client acquisition.\",\n  \"urgency_keywords\": [\"need help fast\"],\n  \"budget_keywords\": [],\n  \"question_type\": \"problem\",\n  \"response_recommendation\": \"suggest_call\",\n  \"reasoning\": \"Strong emotional tone and urgency show immediate pain; likely ready to act if pricing fits.\"\n}\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -5040,
        384
      ],
      "id": "bbd743c5-6b3e-4a03-b6df-818bf76e5365",
      "name": "Lead Qualification"
    },
    {
      "parameters": {
        "text": "={{ $json.output }}",
        "attributes": {
          "attributes": [
            {
              "name": "pain_level",
              "description": "take out",
              "required": true
            },
            {
              "name": "urgency_score",
              "description": "take out",
              "required": true
            },
            {
              "name": "emotional_tone",
              "description": "take out",
              "required": true
            },
            {
              "name": "urgency_keywords",
              "description": "take out",
              "required": true
            },
            {
              "name": "budget_keywords",
              "description": "take out",
              "required": true
            },
            {
              "name": "question_type",
              "description": "take out",
              "required": true
            },
            {
              "name": "reasoning",
              "description": "take out",
              "required": true
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1.2,
      "position": [
        -4704,
        384
      ],
      "id": "d8f39167-1ea5-4e8b-afd8-6628b64b8051",
      "name": "Extract data out"
    },
    {
      "parameters": {
        "operation": "appendOrUpdate",
        "documentId": {
          "__rl": true,
          "value": "1IUNIvKOc2s6qmjwrMZLpuhgvvK_py2sXskapsOswS04",
          "mode": "list",
          "cachedResultName": "Coaches",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1IUNIvKOc2s6qmjwrMZLpuhgvvK_py2sXskapsOswS04/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1653587517,
          "mode": "list",
          "cachedResultName": "Onboarding Leads",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1IUNIvKOc2s6qmjwrMZLpuhgvvK_py2sXskapsOswS04/edit#gid=1653587517"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Name": "={{ $('Edit all Required Fields').item.json.body.name }}",
            "Email": "={{ $('Edit all Required Fields').item.json.body.email }}",
            "number": "={{ $('Edit all Required Fields').item.json.body.phone.replace('+', '') }}",
            "pain": "={{ $json.output.pain_level }}",
            "score": "={{ $json.output.urgency_score }}",
            "timeline": "={{ $('Edit all Required Fields').item.json.body.timeline }}",
            "budget": "={{ $('Edit all Required Fields').item.json.body.budget }}",
            "Emotion": "={{ $json.output.emotional_tone }}",
            "problem": "={{ $('Edit all Required Fields').item.json.body.problem }}",
            "Date": "={{ new Date().toLocaleDateString('en-IN', { timeZone: 'Asia/Kolkata' }) }}",
            "reason": "={{ $json.output.reasoning }}",
            "Goal": "={{ $('Edit all Required Fields').item.json.body.goal }}"
          },
          "matchingColumns": [
            "Email"
          ],
          "schema": [
            {
              "id": "Date",
              "displayName": "Date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Name",
              "displayName": "Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Email",
              "displayName": "Email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "number",
              "displayName": "number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "pain",
              "displayName": "pain",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "score",
              "displayName": "score",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "timeline",
              "displayName": "timeline",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "budget",
              "displayName": "budget",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Emotion",
              "displayName": "Emotion",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "reason",
              "displayName": "reason",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Goal",
              "displayName": "Goal",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "problem",
              "displayName": "problem",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "Lead Status",
              "displayName": "Lead Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        -4320,
        384
      ],
      "id": "9c83311f-e08b-4c19-9fa0-8538582edb0e",
      "name": "Append rows in onboarding form sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "3MsYFPOz6gYs3lBk",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.5-flash",
          "mode": "list",
          "cachedResultName": "models/gemini-2.5-flash"
        },
        "messages": {
          "values": [
            {
              "content": "=You are an expert lead qualification analyst for a coaching or consulting business. \nAnalyze a lead submission and classify it as \"hot\", \"warm\", \"cold\", or \"unqualified\" based on the details provided.\n\nRequired fields:\n- problem (main challenge the lead faces)\n- goal (what the lead wants to achieve)\n- budget (investment the lead is willing to make)\n- timeline (when they plan to start)\n- pain_level (1-10, severity of the problem)\n- urgency_score (1-10, how soon they need help)\n- emotional_tone (positive/neutral/negative/desperate)\n- urgency_keywords (list of urgency words)\n- budget_keywords (list of budget-related words)\n\nGuidelines for classification:\n1. Hot → high pain_level (7-10), high urgency_score (7-10), immediate/this_month timeline, clear budget.\n2. Warm → medium pain_level (4-6), medium urgency_score (4-6), near-future timeline, budget mentioned but flexible.\n3. Cold → low pain_level (1-3), low urgency_score (1-3), distant or uncertain timeline, minimal budget or unsure.\n4. Unqualified → irrelevant query, no budget, unrealistic goals, spam, or incomplete information.\n\nOutput strictly in JSON format:\n\n{\n  \"lead_status\": \"hot\" | \"warm\" | \"cold\" | \"unqualified\",\n  \"confidence\": <number 0-100>,\n  \"reasoning_summary\": \"<1-2 sentences explaining the decision>\"\n}\n\nExample Input:\n{\n  \"problem\": \"{{ $('Edit all Required Fields').item.json.body.problem }}\",\n  \"goal\": \"{{ $('Edit all Required Fields').item.json.body.goal }}\",\n  \"budget\": \"{{ $('Edit all Required Fields').item.json.body.budget }}\",\n  \"timeline\": \"{{ $('Edit all Required Fields').item.json.body.timeline }}\",\n  \"pain_level\": {{ $('Extract data out').item.json.output.pain_level }},\n  \"urgency_score\": {{ $('Extract data out').item.json.output.urgency_score }},\n  \"emotional_tone\": \"{{ $('Extract data out').item.json.output.emotional_tone }}\",\n  \"urgency_keywords\": [\"{{ $('Extract data out').item.json.output.urgency_keywords }}\"],\n  \"budget_keywords\": [\"{{ $('Extract data out').item.json.output.budget_keywords }}\"]\n}\n\nExpected Output:\n{\n  \"lead_status\": \"hot\",\n  \"confidence\": 95,\n  \"reasoning_summary\": \"High pain level, immediate timeline, and defined budget indicate a very serious lead ready for action.\"\n}\n"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        -4080,
        384
      ],
      "id": "1f7c36d3-55d1-45a9-93e5-8e5c754f2c90",
      "name": "Generates hot, cold, warm",
      "credentials": {
        "googlePalmApi": {
          "id": "Gq3qNdXZmlzVb7Jg",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Example input\nconst input = {\n  text: \"```json\\n{\\n  \\\"lead_status\\\": \\\"hot\\\",\\n  \\\"confidence\\\": 95,\\n  \\\"reasoning_summary\\\": \\\"High pain level, immediate timeline, and defined budget indicate a very serious lead ready for action.\\\"\\n}\\n```\"\n};\n\n// Remove ```json wrapper\nconst jsonString = input.text.replace(/```json\\s*|```/g, '').trim();\n\n// Parse JSON\nconst leadData = JSON.parse(jsonString);\n\n// Return as array of objects for n8n\nreturn [\n  {\n    json: {\n      lead_status: leadData.lead_status,\n      confidence: leadData.confidence,\n      reasoning_summary: leadData.reasoning_summary\n    }\n  }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3744,
        384
      ],
      "id": "3cd3fb9b-65a9-4318-87f4-13063ec2d5cd",
      "name": "Filters score"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "e09a510b-597c-46b5-a60f-bb129d702479",
                    "leftValue": "={{ $json.lead_status }}",
                    "rightValue": "unqualified",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "unqualified"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "f3428ff3-e3bf-4519-b7e3-b26cc8fe9226",
                    "leftValue": "={{ $json.lead_status }}",
                    "rightValue": "=cold",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "cold"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "da846f43-4674-4b04-bece-9862c077f037",
                    "leftValue": "={{ $json.lead_status }}",
                    "rightValue": "warm",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "warm"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.lead_status }}",
                    "rightValue": "hot",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "c96bba68-e304-465f-96f8-9111597cb4ce"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "hot"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -3456,
        560
      ],
      "id": "c87b1857-a83a-493c-a775-871ffad0a68a",
      "name": "Switch hot, cold , warm , unqualified"
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "802657959596026",
        "recipientPhoneNumber": "={{ $('Append rows in onboarding form sheet').item.json.number }}",
        "textBody": "hi",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        -2672,
        64
      ],
      "id": "7c3f3176-2c07-44c8-9303-d586fc64ba68",
      "name": "Send a message (unqualified)",
      "webhookId": "be96be24-c04b-45ae-80f3-824ac452c089",
      "credentials": {
        "whatsAppApi": {
          "id": "ixk5U1dBT3xISilr",
          "name": "WhatsApp account"
        }
      }
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "802657959596026",
        "recipientPhoneNumber": "={{ $('Append rows in onboarding form sheet').item.json.number }}",
        "textBody": "hi",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        -2608,
        432
      ],
      "id": "f476f791-ae37-45c0-b69e-ccad85df43b5",
      "name": "Send a message ( warm)",
      "webhookId": "be96be24-c04b-45ae-80f3-824ac452c089",
      "credentials": {
        "whatsAppApi": {
          "id": "ixk5U1dBT3xISilr",
          "name": "WhatsApp account"
        }
      }
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "802657959596026",
        "recipientPhoneNumber": "={{ $('Append rows in onboarding form sheet').item.json.number }}",
        "textBody": "hi",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        -2576,
        912
      ],
      "id": "fb7c6049-b71b-4131-8085-7f8aa686217d",
      "name": "Send a message ( Cold)",
      "webhookId": "be96be24-c04b-45ae-80f3-824ac452c089",
      "credentials": {
        "whatsAppApi": {
          "id": "ixk5U1dBT3xISilr",
          "name": "WhatsApp account"
        }
      }
    },
    {
      "parameters": {
        "sendTo": "new",
        "subject": "nw",
        "message": "new",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        -4704,
        1152
      ],
      "id": "e1923748-6174-4143-ae69-4e90a94630a0",
      "name": "Send Booking Link ( Gmail )",
      "webhookId": "63ce1cf6-9248-4b6f-813d-78c9a5502599",
      "credentials": {
        "gmailOAuth2": {
          "id": "OEcIZm1duf4dQunn",
          "name": "Gmail account 2"
        }
      }
    },
    {
      "parameters": {
        "content": "# Onboarding Form -> Qualify -> alerts and booking links",
        "height": 1312,
        "width": 3280
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -5536,
        0
      ],
      "typeVersion": 1,
      "id": "04498e5d-2e3a-4865-8915-d48bb5a18759",
      "name": "Sticky Note4"
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1IUNIvKOc2s6qmjwrMZLpuhgvvK_py2sXskapsOswS04",
          "mode": "list",
          "cachedResultName": "Coaches",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1IUNIvKOc2s6qmjwrMZLpuhgvvK_py2sXskapsOswS04/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1653587517,
          "mode": "list",
          "cachedResultName": "Onboarding Leads",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1IUNIvKOc2s6qmjwrMZLpuhgvvK_py2sXskapsOswS04/edit#gid=1653587517"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Email": "={{ $('Edit all Required Fields').item.json.body.email }}",
            "Lead Status": "={{ $json.lead_status }}"
          },
          "matchingColumns": [
            "Email"
          ],
          "schema": [
            {
              "id": "Date",
              "displayName": "Date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Name",
              "displayName": "Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Email",
              "displayName": "Email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "number",
              "displayName": "number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "pain",
              "displayName": "pain",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "score",
              "displayName": "score",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "timeline",
              "displayName": "timeline",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "budget",
              "displayName": "budget",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Emotion",
              "displayName": "Emotion",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "reason",
              "displayName": "reason",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "problem",
              "displayName": "problem",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Lead Status",
              "displayName": "Lead Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        -5424,
        1104
      ],
      "id": "d61565ab-4911-4081-80b3-79740377b4d0",
      "name": "Update row in sheet",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "3MsYFPOz6gYs3lBk",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "documentId": {
          "__rl": true,
          "value": "1IUNIvKOc2s6qmjwrMZLpuhgvvK_py2sXskapsOswS04",
          "mode": "list",
          "cachedResultName": "Coaches",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1IUNIvKOc2s6qmjwrMZLpuhgvvK_py2sXskapsOswS04/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1653587517,
          "mode": "list",
          "cachedResultName": "Onboarding Leads",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1IUNIvKOc2s6qmjwrMZLpuhgvvK_py2sXskapsOswS04/edit#gid=1653587517"
        },
        "columns": {
          "mappingMode": "defineBelow",
          "value": {
            "Email": "={{ $('Edit all Required Fields').item.json.body.email }}",
            "Lead Status": "={{ $json.lead_status }}"
          },
          "matchingColumns": [
            "Email"
          ],
          "schema": [
            {
              "id": "Date",
              "displayName": "Date",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Name",
              "displayName": "Name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Email",
              "displayName": "Email",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "number",
              "displayName": "number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "pain",
              "displayName": "pain",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "score",
              "displayName": "score",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "timeline",
              "displayName": "timeline",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "budget",
              "displayName": "budget",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Emotion",
              "displayName": "Emotion",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "reason",
              "displayName": "reason",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "problem",
              "displayName": "problem",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": true
            },
            {
              "id": "Lead Status",
              "displayName": "Lead Status",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "string",
              "canBeUsedToMatch": true,
              "removed": false
            },
            {
              "id": "row_number",
              "displayName": "row_number",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "type": "number",
              "canBeUsedToMatch": true,
              "readOnly": true,
              "removed": true
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": false
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        -3072,
        576
      ],
      "id": "1dddfc55-3ee4-4317-bb29-b44af61ddf0e",
      "name": "Update row in sheet2",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "3MsYFPOz6gYs3lBk",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "sendTo": "xx",
        "subject": "xx",
        "message": "xx",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        -2640,
        224
      ],
      "id": "691643fb-551b-4e3f-a15c-e6b58120cdd2",
      "name": "Send a message",
      "webhookId": "025cb3fe-5639-4f7a-9537-b9a16035b62b",
      "credentials": {
        "gmailOAuth2": {
          "id": "OEcIZm1duf4dQunn",
          "name": "Gmail account 2"
        }
      }
    },
    {
      "parameters": {
        "sendTo": "xx",
        "subject": "xx",
        "message": "xx",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        -2592,
        688
      ],
      "id": "5c7e950f-753e-47e1-ba8b-e2ed10c9b29e",
      "name": "Send a message1",
      "webhookId": "025cb3fe-5639-4f7a-9537-b9a16035b62b",
      "credentials": {
        "gmailOAuth2": {
          "id": "OEcIZm1duf4dQunn",
          "name": "Gmail account 2"
        }
      }
    },
    {
      "parameters": {
        "sendTo": "xx",
        "subject": "xx",
        "message": "xx",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        -2560,
        1120
      ],
      "id": "4b1d8c71-3d79-482a-ac69-b36520b06dd9",
      "name": "Send a message2",
      "webhookId": "025cb3fe-5639-4f7a-9537-b9a16035b62b",
      "credentials": {
        "gmailOAuth2": {
          "id": "OEcIZm1duf4dQunn",
          "name": "Gmail account 2"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -1760,
        2304
      ],
      "id": "fffe2dff-97e0-4c2a-a80b-a79a0d8c2cbf",
      "name": "Google Gemini Chat Model4",
      "credentials": {
        "googlePalmApi": {
          "id": "Gq3qNdXZmlzVb7Jg",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {}
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -4432,
        2256
      ],
      "id": "85818a76-e077-49be-8568-5f80ac8126b4",
      "name": "Checks every 30min"
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "vamsivk1465@gmail.com",
          "mode": "list",
          "cachedResultName": "vamsivk1465@gmail.com"
        },
        "returnAll": true,
        "timeMin": "={{ $now.toFormat(\"yyyy-MM-dd\") }}",
        "timeMax": "={{ $now.plus({ days: 3 }).toFormat(\"yyyy-MM-dd\") }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.3,
      "position": [
        -4240,
        2256
      ],
      "id": "53a02a1a-8b7d-4129-bbb5-7cfef8821056",
      "name": "Get All Meetings",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "g4VAMKMrPf3B63WZ",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "fieldToSplitOut": "id,, summary, start.dateTime, end.dateTime, attendees[0].email, attendees[1].email, description",
        "options": {}
      },
      "type": "n8n-nodes-base.splitOut",
      "typeVersion": 1,
      "position": [
        -4048,
        2256
      ],
      "id": "ef9b7c6b-0c89-495a-955c-a6d18155402f",
      "name": "Split out all Meetings"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "fb70f2da-d1f5-494e-9d94-b96ef7706aae",
              "name": "start.dateTime",
              "value": "={{ $json['start.dateTime'] }}",
              "type": "string"
            },
            {
              "id": "d6f678c9-3aef-4885-9387-c0997adc2e76",
              "name": "$now",
              "value": "={{ $now }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3840,
        2256
      ],
      "id": "4a4f3e20-41c5-48cb-8cb3-0a362d446457",
      "name": "Edit start and end time"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "n8n-nodes-base.splitInBatches",
      "typeVersion": 3,
      "position": [
        -3632,
        2256
      ],
      "id": "8cd77a8a-8890-4201-bbf6-68e5c6fd9a8e",
      "name": "Loop "
    },
    {
      "parameters": {
        "jsCode": "const outputItems = [];\n\nfor (const item of items) {\n    if (!item.json.start || !item.json.start.dateTime) continue;\n\n    // Convert startTime from ISO string\n    const startTime = new Date(item.json.start.dateTime);\n\n    // Convert current time from $now if available, otherwise use system time\n    const now = item.json.$now ? new Date(item.json.$now) : new Date();\n\n    // Calculate difference in hours\n    const diffHours = Math.round((startTime - now) / (1000 * 60 * 60));\n\n    outputItems.push({\n        json: {\n            eventId: item.json.id || null,\n            summary: item.json.summary || null,\n            hoursUntilStart: diffHours <= 0 ? \"0hr\" : (diffHours === 1 ? \"1hr\" : `${diffHours}hrs`)\n        }\n    });\n}\n\nreturn outputItems;\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -3312,
        2272
      ],
      "id": "1f2192b2-c260-4e86-b8b6-0d1d85985640",
      "name": "Checks the time diff ",
      "alwaysOutputData": true
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "d10833b8-63d8-4353-93e4-37a8c32c4e67",
              "name": "time",
              "value": "={{ $json.hoursUntilStart }}",
              "type": "string"
            },
            {
              "id": "2f669074-3ed7-4c3e-9c42-e7c02545db7f",
              "name": "summary",
              "value": "={{ $('Split out all Meetings').item.json.summary }}",
              "type": "string"
            },
            {
              "id": "e6a3ea7a-85b6-4e92-9168-6087f3587eea",
              "name": "['attendees[1].email']",
              "value": "={{ $('Split out all Meetings').item.json['attendees[1].email'] }}",
              "type": "string"
            },
            {
              "id": "a1f961b0-69ea-4507-8fec-dd831ee9dad3",
              "name": "start.dateTime",
              "value": "={{ new Date($('Split out all Meetings').item.json['start.dateTime']).toLocaleString('en-IN', { timeZone: 'Asia/Kolkata' }) }}",
              "type": "string"
            },
            {
              "id": "f8c6c483-49df-4d8a-8d7d-90da2a6ba5cd",
              "name": "creator.email",
              "value": "={{ $('Get All Meetings').item.json.creator.email }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -3088,
        2272
      ],
      "id": "a03e8e80-2b16-4249-bbf1-8674bcbef54e",
      "name": "Edit required fields in calender"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.time }}",
                    "rightValue": "2hr",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "6099b2d2-dab8-4f46-9def-2d5212842ca3"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "2hr"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "1862f489-fcc6-4dbc-aaa4-ac70af544a75",
                    "leftValue": "={{ $json.time }}",
                    "rightValue": "6hr",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "6hr"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "3cf1231d-d375-441c-95e5-ce09230cdc99",
                    "leftValue": "={{ $json.time }}",
                    "rightValue": "1hr",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "1hr"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "e22774b6-296f-4200-b071-20265266bf0a",
                    "leftValue": "={{ $json.isValid.toString() }}",
                    "rightValue": "false",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    }
                  }
                ],
                "combinator": "and"
              }
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -2432,
        2256
      ],
      "id": "f4597445-5cb6-4a9f-9bbe-24822b9b5376",
      "name": "Switch btw hrs",
      "alwaysOutputData": false
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.5-flash-lite-preview-06-17",
          "mode": "list",
          "cachedResultName": "models/gemini-2.5-flash-lite-preview-06-17"
        },
        "messages": {
          "values": [
            {
              "content": "={{ $('Edit required fields in calender').item.json.time }}, {{ $('Edit required fields in calender').item.json.summary }},{{ $('Edit required fields in calender').item.json['attendees[1].email'] }},{{ $('Edit required fields in calender').item.json.start.dateTime }}, {{ $('Edit required fields in calender').item.json.creator.email }}"
            }
          ]
        },
        "simplify": false,
        "jsonOutput": true,
        "options": {
          "systemMessage": "=You are an AI assistant for professional scheduling and reminders.  \nYour task is to write concise, friendly, and exciting emails for booked meetings.  \n\nInputs:  \n- Attendee email: {{ $('Edit required fields in calender').item.json['attendees[1].email'] }}\n- Attendee name: (infer from email if possible, e.g., \"john.doe@gmail.com\" → \"John\")  \n- Meeting summary: {{ $('Edit required fields in calender').item.json.summary }}\n- Meeting date and time: {{ $('Edit required fields in calender').item.json.start.dateTime }}\n- Time until meeting:{{ $('Edit required fields in calender').item.json.time }}(e.g., \"2hrs\", \"3hrs\")  \n- Type of email: (confirmation or reminder)  \n- Organizer email: {{ $('Edit required fields in calender').item.json.creator.email }} (use this to refer to the organizer’s name professionally)\n\nRequirements:  \n1. If `emailType` is \"confirmation\", write a professional email acknowledging the booking. Include a friendly greeting, thank the attendee, mention the meeting date/time, and add an exciting note about looking forward to the discussion using the `hoursUntilStart` input.  \n2. If `emailType` is \"reminder\", write a friendly reminder 2 hours before the meeting. Include the meeting summary, date/time, and an enthusiastic note about speaking soon using `hoursUntilStart`.  \n3. Emails should be:  \n   - 3–5 sentences  \n   - Polite, professional, and exciting  \n   - Include a greeting using the attendee’s name  \n   - Include a professional sign-off using the organizer’s name  \n   - Use phrases like “I’m really looking forward to our conversation,” “can’t wait to discuss,” or “excited to connect.”  \n4. Output only the ready-to-send email text. No explanations.\n\nExample output (confirmation):  \n\"Dear John,  \nThank you for scheduling a meeting regarding 'Project Discussion'. Your meeting is confirmed for October 16th at 12:00 PM IST. I’m really looking forward to our conversation and can’t wait to dive into the discussion with you in just 2hrs!  \nBest regards,  \nJane Doe\"\n\nExample output (reminder):  \n\"Dear John,  \nThis is a friendly reminder of your upcoming meeting 'Project Discussion' scheduled for October 16th at 12:00 PM IST. I’m excited to connect with you in 2hrs and discuss everything in detail. Please let me know if you need to adjust the timing.  \nBest regards,  \nJane Doe\"\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        -2080,
        2128
      ],
      "id": "4dc18e2b-d530-452e-a85c-4da901513e7d",
      "name": "Send personalized message ( Email )",
      "credentials": {
        "googlePalmApi": {
          "id": "Gq3qNdXZmlzVb7Jg",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "text": "={{ $json.candidates[0].content.parts[0].text }}",
        "attributes": {
          "attributes": [
            {
              "name": "Subject",
              "description": "Take subject out with clear idea",
              "required": true
            },
            {
              "name": "Body",
              "description": "Take out body with clear words",
              "required": true
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1.2,
      "position": [
        -1760,
        2128
      ],
      "id": "3b757310-bcb8-4780-aedf-1f5bb51980df",
      "name": "Extract Information out"
    },
    {
      "parameters": {
        "sendTo": "=vamsikrishna2536@gmail.com",
        "subject": "={{ $json.output.Subject }}",
        "emailType": "text",
        "message": "={{ $json.output.Body }}",
        "options": {
          "appendAttribution": false
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        -1424,
        2128
      ],
      "id": "88e35ca5-b0c7-4b6e-9f2a-62b6ca19ef3b",
      "name": "Send a Booking email alert",
      "webhookId": "8bc0d4d6-8c1c-4bea-9f46-d46cb034971a",
      "credentials": {
        "gmailOAuth2": {
          "id": "UbWO1LFfZ6s8MzMA",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.5-flash-lite-preview-06-17",
          "mode": "list",
          "cachedResultName": "models/gemini-2.5-flash-lite-preview-06-17"
        },
        "messages": {
          "values": [
            {
              "content": "=You are an assistant for sending professional and friendly reminders or confirmations via WhatsApp or Telegram.  \nYour task is to write concise, engaging, and exciting messages for booked meetings.  \n\nInputs:  \n- Attendee email: {{ $('Edit required fields in calender').item.json['attendees[1].email'] }}\n- Attendee name: (infer from email if possible, e.g., \"john.doe@gmail.com\" → \"John\")  \n- Meeting summary: {{ $('Edit required fields in calender').item.json.summary }}\n- Meeting date and time: {{ $('Edit required fields in calender').item.json.start.dateTime }}\n- Time until meeting: {{ $('Edit required fields in calender').item.json.time }} (e.g., \"2hrs\", \"3hrs\")  \n- Type of message: (confirmation or reminder)  \n- Organizer email: {{ $('Edit required fields in calender').item.json.creator.email }} (use this to refer to the organizer’s name professionally)\n\nRequirements:  \n1. If `messageType` is \"confirmation\", write a short WhatsApp/Telegram message acknowledging the booking. Include:  \n   - Friendly greeting using the attendee’s name  \n   - Meeting summary and date/time  \n   - Exciting note using `time` (e.g., \"Looking forward to connecting with you in 2hrs!\")  \n   - Optional quick call-to-action if needed  \n2. If `messageType` is \"reminder\", write a concise reminder message 2 hours before the meeting. Include:  \n   - Meeting summary and date/time  \n   - Exciting, friendly note mentioning `time`  \n   - Optional note to reply if they need to reschedule  \n3. Messages should be:  \n   - Short and natural (1–3 sentences)  \n   - Friendly, professional, and enthusiastic  \n   - Easy to read on mobile chat  \n4. Output only the ready-to-send message text, no extra explanations.\n\nExample output (confirmation):  \n\"Hi John, thanks for scheduling a meeting about 'Project Discussion'. It's set for Oct 16th at 12:00 PM IST. Really excited to connect with you in just 2hrs!\"  \n\nExample output (reminder):  \n\"Hi John, a quick reminder about your 'Project Discussion' meeting at Oct 16th, 12:00 PM IST. Can't wait to talk with you in 2hrs!\"\n"
            }
          ]
        },
        "simplify": false,
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        -2032,
        2432
      ],
      "id": "c25d11b0-d5bb-46b2-b473-4f83d2e16ebf",
      "name": "Send personalized DM",
      "credentials": {
        "googlePalmApi": {
          "id": "Gq3qNdXZmlzVb7Jg",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "chatId": "23",
        "text": "HI",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -1520,
        2288
      ],
      "id": "8c817d79-4b87-4fed-8601-8157294aa0da",
      "name": "Send a remainder in Telegram",
      "webhookId": "0b182a8a-c988-4111-a16f-68a83bde7f1f",
      "credentials": {
        "telegramApi": {
          "id": "gwHBxrkrPXY0I5Fk",
          "name": "Normal"
        }
      }
    },
    {
      "parameters": {
        "operation": "send",
        "phoneNumberId": "802657959596026",
        "recipientPhoneNumber": "+918919053970",
        "textBody": "Hello",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        -1472,
        2496
      ],
      "id": "0c6a4c3c-575e-4962-bbe8-7d224de6abb0",
      "name": "Send a remainder in Whatsapp",
      "webhookId": "ee19619e-9f28-459b-a7dc-5ab34fa53e53",
      "credentials": {
        "whatsAppApi": {
          "id": "ixk5U1dBT3xISilr",
          "name": "WhatsApp account"
        }
      }
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-flash-lite-preview-06-17",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -3840,
        2992
      ],
      "id": "adfaf6ab-6ab4-49bc-9ca8-89cc1e6b43af",
      "name": "Google Gemini Chat Model5",
      "credentials": {
        "googlePalmApi": {
          "id": "Gq3qNdXZmlzVb7Jg",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.pain }}, {{ $json.score }} ,{{ $json.timeline }}, {{ $json.budget }}, {{ $json.Emotion }}, {{ $json.reason }} ,{{ $json.Goal }},{{ $json.problem }}",
        "options": {
          "systemMessage": "You are an AI assistant that prepares **actionable pre-call briefs for a coach**. You receive lead data in JSON format:\n\nPain: {{ $json.pain }}\nScore: {{ $json.score }}\nTimeline: {{ $json.timeline }}\nBudget: {{ $json.budget }}\nEmotion: {{ $json.Emotion }}\nReason: {{ $json.reason }}\nGoal: {{ $json.Goal }}\nProblem: {{ $json.problem }}\n\nYour task:\n1. Generate a **concise pre-call preparation checklist** for the coach.  \n2. Focus on **what the coach should learn, research, or prepare** before the call, including:  \n   - Key pain points to address  \n   - Urgency and timeline considerations  \n   - Budget constraints  \n   - Emotional state and mindset  \n   - Goals and desired outcomes  \n   - Specific problems to clarify or probe  \n   - Suggested questions to ask  \n   - Topics or solutions to be ready to discuss  \n3. Output should be **bullet points only**, actionable, and readable in under 15 seconds.  \n4. Avoid repeating raw JSON or long paragraphs. Use clear, directive language.  \n\n**Example output:**\n\n- Pain points: Understand lead’s high urgency issue and its impact  \n- Timeline: Prepare for immediate-action strategies  \n- Budget: Be ready to suggest solutions under 10k  \n- Emotion: Neutral, maintain professional and motivating tone  \n- Goal: Focus on helping lead achieve 10 new clients  \n- Problem: Clarify vague ‘having issue’ with targeted questions  \n- Questions: Ask about current challenges, past attempts, expected results  \n- Prep: Have 2-3 relevant strategies/examples ready, anticipate objections, plan call flow\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -3728,
        2784
      ],
      "id": "29bb9efe-9b48-4f4d-acfe-64a6b497735c",
      "name": "Pre Call brief "
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "0d903978-6a1c-4aeb-a96b-e743a32cfeb9",
              "name": "attendees[1].email",
              "value": "={{ $('Get All Meetings').item.json.attendees[1].email }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -4208,
        2784
      ],
      "id": "d1bd3d35-87c3-4ebd-b216-2fcb767bc30a",
      "name": "Edit only Req Fields"
    },
    {
      "parameters": {
        "jsCode": "// Get time value from previous node\nconst time = $json.time?.toLowerCase()?.trim() || \"\";\n\n// Allowed time values\nconst validTimes = [\"1hr\", \"2hrs\", \"6hrs\"];\n\n// Check if matches\nconst isValid = validTimes.includes(time);\n\n// Return result\nreturn [{ time, isValid }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2880,
        2272
      ],
      "id": "b2d05e1a-3ac4-46ee-aedb-a80cfbec950a",
      "name": "Check true or false "
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1IUNIvKOc2s6qmjwrMZLpuhgvvK_py2sXskapsOswS04",
          "mode": "list",
          "cachedResultName": "Coaches",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1IUNIvKOc2s6qmjwrMZLpuhgvvK_py2sXskapsOswS04/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1653587517,
          "mode": "list",
          "cachedResultName": "Onboarding Leads",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1IUNIvKOc2s6qmjwrMZLpuhgvvK_py2sXskapsOswS04/edit#gid=1653587517"
        },
        "filtersUI": {
          "values": [
            {
              "lookupColumn": "Email",
              "lookupValue": "={{ $json.attendees[1].email }}"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.7,
      "position": [
        -3984,
        2784
      ],
      "id": "95c72f57-44e5-48ec-9a70-3df46af1f644",
      "name": "Get onboarding form details",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "3MsYFPOz6gYs3lBk",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "operation": "send",
        "recipientPhoneNumber": "918919053970",
        "textBody": "X",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.whatsApp",
      "typeVersion": 1,
      "position": [
        -3024,
        2784
      ],
      "id": "a7e4ea5c-c521-462a-8576-c49324212b62",
      "name": "Send message",
      "webhookId": "05f1c468-d684-4f5e-a90e-43e0eb0c4167",
      "credentials": {
        "whatsAppApi": {
          "id": "ixk5U1dBT3xISilr",
          "name": "WhatsApp account"
        }
      },
      "disabled": true
    },
    {
      "parameters": {
        "text": "={{ $json.output }}",
        "attributes": {
          "attributes": [
            {
              "name": "Pain points",
              "description": "get this out",
              "required": true
            },
            {
              "name": "Timeline",
              "description": "get this out",
              "required": true
            },
            {
              "name": "Budget",
              "description": "get this out",
              "required": true
            },
            {
              "name": "Emotion",
              "description": "get this out",
              "required": true
            },
            {
              "name": "Goal",
              "description": "get this out",
              "required": true
            },
            {
              "name": "Problem",
              "description": "get this out",
              "required": true
            },
            {
              "name": "Questions",
              "description": "get this out",
              "required": true
            },
            {
              "name": "Prep",
              "description": "get this out",
              "required": true
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1.2,
      "position": [
        -3376,
        2784
      ],
      "id": "3417e5aa-dabc-4e6d-afcd-b7a3e7bfb19a",
      "name": "Information Extractor"
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -3456,
        2992
      ],
      "id": "91ff1aa1-d48c-4fc7-bed2-b8163b3783f4",
      "name": "Google Gemini Chat Model6",
      "credentials": {
        "googlePalmApi": {
          "id": "Gq3qNdXZmlzVb7Jg",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "content": "# Meeting remainders with Pre Call Brief Description",
        "height": 1120,
        "width": 3536,
        "color": 4
      },
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        -4480,
        2112
      ],
      "typeVersion": 1,
      "id": "43297811-8d83-4eb9-8cb2-5106391febb5",
      "name": "Sticky Note5"
    },
    {
      "parameters": {
        "chatId": "8417171830",
        "text": "=Hey new Hot lead  \nName: {{ $('Edit all Required Fields').item.json.body.name }} \nEmail :{{ $('Edit all Required Fields').item.json.body.email }} \nphone:{{ $('Edit all Required Fields').item.json.body.phone }} \nproblem: {{ $('Edit all Required Fields').item.json.body.problem }} \nGoal:{{ $('Edit all Required Fields').item.json.body.goal }} \nBudget:{{ $('Edit all Required Fields').item.json.body.budget.replace(/_/g, ' ') }} \nTimeline:{{ $('Edit all Required Fields').item.json.body.timeline }} \nReason to qualify hot:{{ $('Extract data out').item.json.output.reasoning }}",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -5232,
        1104
      ],
      "id": "66e60186-05e1-464e-9b23-259e770f554b",
      "name": "Send a text message",
      "webhookId": "86cb413c-9f9a-4ad4-b3eb-6fa15436a7be",
      "credentials": {
        "telegramApi": {
          "id": "gwHBxrkrPXY0I5Fk",
          "name": "Normal"
        }
      }
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "4aa98d4b-fa50-48a0-9c6c-4ae3b05d00d5",
                    "leftValue": "={{ $('After Filling Onboarding Form').item.json.body.source }}",
                    "rightValue": "whatsapp",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "b4ae81bc-6e68-49a8-9bcd-a73441a15708",
                    "leftValue": "={{ $('After Filling Onboarding Form').item.json.body.source }}",
                    "rightValue": "Gmail",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Gmail"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        -5008,
        1104
      ],
      "id": "0d252621-ce3b-4eda-a91e-5e556a1e961b",
      "name": "Send in Platforms"
    },
    {
      "parameters": {
        "chatId": "8417171830",
        "text": "Hey book a link",
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.telegram",
      "typeVersion": 1.2,
      "position": [
        -4688,
        976
      ],
      "id": "675a19df-f5b1-4579-9545-1f8454fa150b",
      "name": "Send a text message1",
      "webhookId": "f1d8a267-1fe7-4d1a-b630-300bdaabea74",
      "credentials": {
        "telegramApi": {
          "id": "Eb5m8Ou5otuazRt3",
          "name": "Summary"
        }
      }
    }
  ],
  "connections": {
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Lead Qualification",
            "type": "ai_languageModel",
            "index": 0
          },
          {
            "node": "Extract data out",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "After Filling Onboarding Form": {
      "main": [
        [
          {
            "node": "Edit all Required Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit all Required Fields": {
      "main": [
        [
          {
            "node": "Lead Qualification",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Lead Qualification": {
      "main": [
        [
          {
            "node": "Extract data out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract data out": {
      "main": [
        [
          {
            "node": "Append rows in onboarding form sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Append rows in onboarding form sheet": {
      "main": [
        [
          {
            "node": "Generates hot, cold, warm",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Generates hot, cold, warm": {
      "main": [
        [
          {
            "node": "Filters score",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filters score": {
      "main": [
        [
          {
            "node": "Switch hot, cold , warm , unqualified",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch hot, cold , warm , unqualified": {
      "main": [
        [
          {
            "node": "Update row in sheet2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Update row in sheet2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Update row in sheet2",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Update row in sheet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update row in sheet": {
      "main": [
        [
          {
            "node": "Send a text message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update row in sheet2": {
      "main": [
        [
          {
            "node": "Send a message ( warm)",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send a message1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send a message ( Cold)",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send a message2",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send a message (unqualified)",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send a message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model4": {
      "ai_languageModel": [
        [
          {
            "node": "Extract Information out",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Checks every 30min": {
      "main": [
        [
          {
            "node": "Get All Meetings",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get All Meetings": {
      "main": [
        [
          {
            "node": "Split out all Meetings",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Split out all Meetings": {
      "main": [
        [
          {
            "node": "Edit start and end time",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit start and end time": {
      "main": [
        [
          {
            "node": "Loop ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop ": {
      "main": [
        [],
        [
          {
            "node": "Checks the time diff ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Checks the time diff ": {
      "main": [
        [
          {
            "node": "Edit required fields in calender",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit required fields in calender": {
      "main": [
        [
          {
            "node": "Check true or false ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch btw hrs": {
      "main": [
        [
          {
            "node": "Send personalized message ( Email )",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send personalized DM",
            "type": "main",
            "index": 0
          },
          {
            "node": "Loop ",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send personalized message ( Email )",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send personalized DM",
            "type": "main",
            "index": 0
          },
          {
            "node": "Loop ",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop ",
            "type": "main",
            "index": 0
          },
          {
            "node": "Edit only Req Fields",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Loop ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send personalized message ( Email )": {
      "main": [
        [
          {
            "node": "Extract Information out",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Extract Information out": {
      "main": [
        [
          {
            "node": "Send a Booking email alert",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send personalized DM": {
      "main": [
        [
          {
            "node": "Send a remainder in Telegram",
            "type": "main",
            "index": 0
          },
          {
            "node": "Send a remainder in Whatsapp",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model5": {
      "ai_languageModel": [
        [
          {
            "node": "Pre Call brief ",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Pre Call brief ": {
      "main": [
        [
          {
            "node": "Information Extractor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit only Req Fields": {
      "main": [
        [
          {
            "node": "Get onboarding form details",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check true or false ": {
      "main": [
        [
          {
            "node": "Switch btw hrs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get onboarding form details": {
      "main": [
        [
          {
            "node": "Pre Call brief ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Information Extractor": {
      "main": [
        [
          {
            "node": "Send message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model6": {
      "ai_languageModel": [
        [
          {
            "node": "Information Extractor",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Send a text message": {
      "main": [
        [
          {
            "node": "Send in Platforms",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send in Platforms": {
      "main": [
        [
          {
            "node": "Send a text message1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send Booking Link ( Gmail )",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {
    "After Filling Onboarding Form": [
      {
        "json": {
          "headers": {
            "host": "n8n.srv1011051.hstgr.cloud",
            "user-agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/141.0.0.0 Safari/537.36",
            "content-length": "896",
            "accept": "*/*",
            "accept-encoding": "gzip, deflate, br, zstd",
            "accept-language": "en-US,en;q=0.9",
            "content-type": "multipart/form-data; boundary=----WebKitFormBoundarydsT0DHbMB3IGNMA4",
            "dnt": "1",
            "origin": "http://127.0.0.1:5500",
            "priority": "u=1, i",
            "referer": "http://127.0.0.1:5500/",
            "sec-ch-ua": "\"Google Chrome\";v=\"141\", \"Not?A_Brand\";v=\"8\", \"Chromium\";v=\"141\"",
            "sec-ch-ua-mobile": "?0",
            "sec-ch-ua-platform": "\"Windows\"",
            "sec-fetch-dest": "empty",
            "sec-fetch-mode": "cors",
            "sec-fetch-site": "cross-site",
            "x-forwarded-for": "152.59.202.31",
            "x-forwarded-host": "n8n.srv1011051.hstgr.cloud",
            "x-forwarded-port": "443",
            "x-forwarded-proto": "https",
            "x-forwarded-server": "91aa74ac8129",
            "x-real-ip": "152.59.202.31"
          },
          "params": {},
          "query": {},
          "body": {
            "name": "Hi",
            "email": "vamsi@gmail.com",
            "phone": "+880 98543212",
            "problem": "Hello i m having issue",
            "goal": "Get 10 new clients",
            "budget": "below_10k",
            "timeline": "immediately",
            "source": "coach_onboarding_form"
          },
          "webhookUrl": "https://n8n.srv1011051.hstgr.cloud/webhook-test/05cfe1ee-5847-4230-ba6c-de993b325837",
          "executionMode": "test"
        }
      }
    ],
    "Edit only Req Fields": [
      {
        "json": {
          "attendees": [
            null,
            {
              "email": "vamsi@gmail.com"
            }
          ]
        }
      }
    ],
    "Get onboarding form details": [
      {
        "json": {
          "row_number": 2,
          "Date": "23/10/2025",
          "Name": "Hi",
          "Email": "vamsi@gmail.com",
          "number": "880 98543212",
          "pain": 7,
          "score": 10,
          "timeline": "immediately",
          "budget": "below_10k",
          "Emotion": "neutral",
          "reason": "High urgency with a specific desired outcome (10 new clients) and a stated budget indicates the lead is ready to take action. A direct call is recommended to understand the vague 'having issue' further.",
          "Goal": "Get 10 new clients",
          "problem": "Hello i m having issue",
          "Lead Status": "hot"
        }
      }
    ]
  },
  "versionId": "07a86acf-9df8-4e5d-9b28-03d93f0ea31d",
  "triggerCount": 0,
  "shared": [
    {
      "createdAt": "2025-10-28T20:43:59.197Z",
      "updatedAt": "2025-10-28T20:43:59.197Z",
      "role": "workflow:owner",
      "workflowId": "9IJ0vzzs9Qa4qW9Q",
      "projectId": "VDyoKZWt3i5eAZSO"
    }
  ],
  "tags": []
}