{
  "createdAt": "2025-10-21T11:50:07.072Z",
  "updatedAt": "2025-10-21T13:11:06.000Z",
  "id": "xOl5dqbr93rnsZsN",
  "name": "Fathom Meeting Summary Extract",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -96,
        160
      ],
      "id": "a212fd2b-ae22-4d5e-b6a3-1b23ca8f32dc",
      "name": "When clicking ‘Execute workflow’"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.5-flash-lite-preview-06-17",
          "mode": "list",
          "cachedResultName": "models/gemini-2.5-flash-lite-preview-06-17"
        },
        "messages": {
          "values": [
            {
              "content": "=You are analyzing a sales call transcript. Extract all objections the prospect raised.\n\nFormat as JSON array:\n[\n  \"Objection 1: ...\",\n  \"Objection 2: ...\",\n  ...\n]\n\nTranscript:\n{{ $json[\"cleanedTranscript\"].map(c => c.speaker + \": \" + c.text).join(\"\\n\") }}\n"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        1008,
        -160
      ],
      "id": "54068088-550a-474b-9e99-412da5f9fa3c",
      "name": "Objections",
      "credentials": {
        "googlePalmApi": {
          "id": "Gq3qNdXZmlzVb7Jg",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.5-flash-lite-preview-06-17",
          "mode": "list",
          "cachedResultName": "models/gemini-2.5-flash-lite-preview-06-17"
        },
        "messages": {
          "values": [
            {
              "content": "=You are analyzing a sales call transcript. Extract all questions the prospect asked.\n\nFormat as a JSON array:\n[\n  \"Question 1: ...\",\n  \"Question 2: ...\",\n  ...\n]\n\nTranscript:\n{{ $node[\"Divide as Speakers \"].json.cleanedTranscript.map(c => c.speaker + \": \" + c.text).join(\"\\n\") }}"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        992,
        48
      ],
      "id": "448c33f2-8fb5-44a6-845e-413935ace4cc",
      "name": "Questions",
      "credentials": {
        "googlePalmApi": {
          "id": "Gq3qNdXZmlzVb7Jg",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.5-flash-lite-preview-06-17",
          "mode": "list",
          "cachedResultName": "models/gemini-2.5-flash-lite-preview-06-17"
        },
        "messages": {
          "values": [
            {
              "content": "=You are analyzing a sales call transcript. Identify emotional triggers, pain points, frustrations, or motivators expressed by the prospect.  \n\nFormat as a JSON array:\n[\n  \"Emotional Trigger 1: ...\",\n  \"Emotional Trigger 2: ...\",\n  ...\n]\n\nTranscript:\n{{ $('Divide as Speakers ').item.json.cleanedTranscript.map(c => c.speaker + \": \" + c.text).join(\"\\n\") }}\n"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        1008,
        240
      ],
      "id": "ed36a138-3511-4a8b-891f-d2f94f206bf4",
      "name": "Emotional Triggers",
      "credentials": {
        "googlePalmApi": {
          "id": "Gq3qNdXZmlzVb7Jg",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "numberInputs": 4
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        1488,
        80
      ],
      "id": "c94bdc1d-9365-4c18-a01a-09c751e59930",
      "name": "Merge"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.5-flash-lite-preview-06-17",
          "mode": "list",
          "cachedResultName": "models/gemini-2.5-flash-lite-preview-06-17"
        },
        "messages": {
          "values": [
            {
              "content": "=You are a social media content creator. Based on the following extracted data from a sales call, create a 7-slide Instagram carousel.\n\nData:\nObjections: {{ $json[\"objections\"].join(\"; \") }}\nQuestions: {{ $json[\"questions\"].join(\"; \") }}\nEmotional Triggers: {{ $json[\"emotionalTriggers\"].join(\"; \") }}\n\nFormat each slide with a short, punchy text (15-20 words max):\n\nSlide 1: Hook (grab attention)\nSlide 2: Objection 1 + How to address\nSlide 3: Objection 2 + How to address\nSlide 4: Question 1 + Insight\nSlide 5: Emotional Trigger 1 + Solution\nSlide 6: Emotional Trigger 2 + Solution\nSlide 7: CTA (Call-to-Action) - e.g., \"DM me if this resonates!\"\n\nMake the language engaging, friendly, and in the coach's brand voice.\n"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        1904,
        -144
      ],
      "id": "b86695c7-a7bf-4e9a-8b85-3b7fe4757a3a",
      "name": "Carousal",
      "credentials": {
        "googlePalmApi": {
          "id": "Gq3qNdXZmlzVb7Jg",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.5-flash-lite-preview-06-17",
          "mode": "list",
          "cachedResultName": "models/gemini-2.5-flash-lite-preview-06-17"
        },
        "messages": {
          "values": [
            {
              "content": "=You are a social media content creator. Based on the extracted data from a sales call, write a LinkedIn post that:\n\n- Tells a short story or scenario from the call\n- Highlights objections, questions, or frustrations the prospect shared\n- Shows insights or solutions\n- Ends with a friendly CTA (like commenting or DMing)\n\nData:\nObjections: {{ $json.objections }}\nQuestions: {{ $json.questions }}\nEmotional Triggers: {{ $json.emotionalTriggers }}\n\nTone: Professional, story-driven, client-focused, and engaging\nLength: 150–250 words\n"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        1904,
        32
      ],
      "id": "c358dfc6-9c12-4d0b-83d7-a6eebba190a8",
      "name": "Linkedin Post",
      "credentials": {
        "googlePalmApi": {
          "id": "Gq3qNdXZmlzVb7Jg",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.5-flash-lite-preview-06-17",
          "mode": "list",
          "cachedResultName": "models/gemini-2.5-flash-lite-preview-06-17"
        },
        "messages": {
          "values": [
            {
              "content": "=You are a professional content creator for a coach. Based on the following extracted data from a sales call, write a short, engaging email.\n\nData:\nObjections: {{ $json.objections }}\nQuestions: {{ $json.questions }}\nEmotional Triggers: {{ $json.emotionalTriggers }}\n\nEmail requirements:\n- Include a clear subject line\n- Highlight 1-2 objections or pain points from the prospect\n- Provide actionable insight or solution\n- End with a friendly call-to-action (e.g., reply to this email, DM me, or schedule a call)\n- Tone: professional but friendly\n- Length: 150–200 words\n"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        1920,
        224
      ],
      "id": "d5a8b7e6-1a6a-4aff-b85d-d8018fac9919",
      "name": "Email",
      "credentials": {
        "googlePalmApi": {
          "id": "Gq3qNdXZmlzVb7Jg",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.5-flash-lite-preview-06-17",
          "mode": "list",
          "cachedResultName": "models/gemini-2.5-flash-lite-preview-06-17"
        },
        "messages": {
          "values": [
            {
              "content": "=You are a social media content creator. Based on the following extracted data from a sales call, create a 5-slide story sequence for Instagram/Facebook.\n\nData:\nObjections: {{ $json.objections }}\nQuestions: {{ $json.questions }}\nEmotional Triggers: {{ $json.emotionalTriggers }}\n\nInstructions:\n- Slide 1: Hook / Attention Grabber\n- Slide 2: Highlight an objection or pain point\n- Slide 3: Share a question or frustration from the prospect\n- Slide 4: Provide a solution or actionable insight\n- Slide 5: CTA (Call-to-Action) - e.g., \"Swipe up\", \"DM me\", \"Comment below\"\n\nKeep each slide short, punchy, and visually scannable (15-20 words max). \nUse friendly, engaging, and brand-aligned language.\n"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        1920,
        464
      ],
      "id": "9a951b6c-8ddc-4efb-b5f0-0d90e5acd58d",
      "name": "Story Sequence",
      "credentials": {
        "googlePalmApi": {
          "id": "Gq3qNdXZmlzVb7Jg",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "text": "={{ $json.content.parts[0].text }}",
        "attributes": {
          "attributes": [
            {
              "name": "Subject",
              "description": "XX",
              "required": true
            },
            {
              "name": "Body",
              "description": "XX",
              "required": true
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.informationExtractor",
      "typeVersion": 1.2,
      "position": [
        2240,
        224
      ],
      "id": "05291cc1-1fb9-4f3b-94c0-7d49e2479acc",
      "name": "Information Extractor"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-flash-lite-preview-06-17",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        2208,
        368
      ],
      "id": "c8be8bae-ba99-443f-b667-b5c40cf3b08b",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "Gq3qNdXZmlzVb7Jg",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "url": "https://api.fathom.ai/external/v1/meetings",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        112,
        160
      ],
      "id": "a53405da-0612-4752-a7fd-e02fbefd6222",
      "name": "Get all recordings",
      "credentials": {
        "httpHeaderAuth": {
          "id": "NBhzhmldtZCSS2om",
          "name": "Lumoscale -Fathom"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://api.fathom.ai/external/v1/recordings/{{ $json.items[0].recording_id }}/transcript",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        304,
        224
      ],
      "id": "23a06881-4f2f-48ac-8712-0a7eb4ec3b25",
      "name": "Get Transcript",
      "credentials": {
        "httpHeaderAuth": {
          "id": "NBhzhmldtZCSS2om",
          "name": "Lumoscale -Fathom"
        }
      }
    },
    {
      "parameters": {
        "url": "=https://api.fathom.ai/external/v1/recordings/{{ $json.items[0].recording_id }}/summary",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        304,
        32
      ],
      "id": "9a9c281a-fc46-4676-9c65-090bc0a302a4",
      "name": "Get Summary",
      "credentials": {
        "httpHeaderAuth": {
          "id": "NBhzhmldtZCSS2om",
          "name": "Lumoscale -Fathom"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Get the transcript array from input\nconst transcript = $input.item.json.transcript;\n\n// Map each transcript entry to \"Speaker Name: text\"\nconst formatted = transcript.map(entry => {\n  // Try to get name from multiple possible locations\n  const speaker = entry.display_name || (entry.speaker && entry.speaker.display_name) || \"Unknown\";\n  const text = entry.text || \"\";\n  return `${speaker}: ${text}`;\n});\n\n// Return as single array\nreturn [{ json: { conversation: formatted } }];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        496,
        224
      ],
      "id": "143501be-0e90-442a-b3a8-0603583e12d2",
      "name": "Filter "
    },
    {
      "parameters": {
        "jsCode": "// Input: msg.json.conversation = array of strings like:\n// [\"Lumoscale: Yeah, okay.\", \"Lumoscale: Let's wait until the beginning of the day.\", ...]\n\nconst conversation = $json[\"conversation\"]; // Your conversation array\n\nlet cleanedTranscript = [];\n\nconversation.forEach(line => {\n    if (!line) return; // skip empty lines\n\n    // Split speaker and text\n    const parts = line.split(\":\");\n    if (parts.length < 2) return; // skip lines without proper speaker\n\n    const speaker = parts[0].trim();\n    const speech = parts.slice(1).join(\":\").trim();\n\n    // Filter out filler / meaningless lines\n    const fillers = [\"yeah\", \"huh\", \"okay\", \"hello\", \"come on in here\", \"what\", \"sorry to interrupt\"];\n    if (speech.length < 3) return; // skip very short lines\n    if (fillers.some(f => speech.toLowerCase().includes(f))) return;\n\n    cleanedTranscript.push({speaker, text: speech});\n});\n\nreturn [{json: {cleanedTranscript}}];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        656,
        224
      ],
      "id": "4a3bd781-9f22-4265-8732-54da62418825",
      "name": "Divide as Speakers "
    },
    {
      "parameters": {
        "jsCode": "// Access previous OpenAI / Gemini node outputs\nconst objectionsNode = $node[\"Objections\"].json[\"content\"][\"parts\"][0][\"text\"];\nconst questionsNode = $node[\"Questions\"].json[\"content\"][\"parts\"][0][\"text\"];\nconst emotionalTriggersNode = $node[\"Emotional Triggers\"].json[\"content\"][\"parts\"][0][\"text\"];\nconst transformationStoriesNode = $node[\"Transformation Stories\"].json[\"content\"][\"parts\"][0][\"text\"];\n\n// Helper function to remove ```json and ``` from OpenAI output\nfunction cleanJSON(str) {\n    if (!str) return \"[]\";\n    return str.replace(/```json|```/g, '').trim();\n}\n\n// Parse outputs safely\nlet objections, questions, emotionalTriggers, transformationStories;\n\ntry {\n    objections = JSON.parse(cleanJSON(objectionsNode));\n} catch (err) {\n    objections = [];\n}\n\ntry {\n    questions = JSON.parse(cleanJSON(questionsNode));\n} catch (err) {\n    questions = [];\n}\n\ntry {\n    emotionalTriggers = JSON.parse(cleanJSON(emotionalTriggersNode));\n} catch (err) {\n    emotionalTriggers = [];\n}\n\ntry {\n    transformationStories = JSON.parse(cleanJSON(transformationStoriesNode));\n} catch (err) {\n    transformationStories = [];\n}\n\n// Return combined data\nreturn [\n    {\n        json: { \n            objections, \n            questions, \n            emotionalTriggers,\n            transformationStories\n        }\n    }\n];\n"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        1680,
        112
      ],
      "id": "bef9571c-22a9-4293-a215-9e0e05eaecd7",
      "name": "Single Array"
    },
    {
      "parameters": {
        "modelId": {
          "__rl": true,
          "value": "models/gemini-2.5-flash-lite-preview-06-17",
          "mode": "list",
          "cachedResultName": "models/gemini-2.5-flash-lite-preview-06-17"
        },
        "messages": {
          "values": [
            {
              "content": "=You are analyzing a sales call transcript. Extract all transformation stories or statements where the prospect shares struggles, past attempts, or consequences if problems are not solved.  \n\nFormat as a JSON array:\n[\n  \"Story 1: ...\",\n  \"Story 2: ...\",\n  ...\n]\n\nTranscript:\n{{ $node[\"Divide as Speakers \"].json.cleanedTranscript.map(c => c.speaker + \": \" + c.text).join(\"\\n\") }}\n"
            }
          ]
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.googleGemini",
      "typeVersion": 1,
      "position": [
        992,
        480
      ],
      "id": "f3e7f75e-7e9e-4a65-a246-dace64a7f745",
      "name": "Transformation Stories",
      "credentials": {
        "googlePalmApi": {
          "id": "Gq3qNdXZmlzVb7Jg",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "path": "8ae75de6-c16d-4f25-915c-3fb18b16a67c",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2.1,
      "position": [
        192,
        -320
      ],
      "id": "61852a32-3f60-4b5f-886b-399a764e674a",
      "name": "Webhook",
      "webhookId": "8ae75de6-c16d-4f25-915c-3fb18b16a67c"
    }
  ],
  "connections": {
    "When clicking ‘Execute workflow’": {
      "main": [
        [
          {
            "node": "Get all recordings",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Objections": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Questions": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Emotional Triggers": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Single Array",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Email": {
      "main": [
        [
          {
            "node": "Information Extractor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Carousal": {
      "main": [
        []
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Information Extractor",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Get all recordings": {
      "main": [
        [
          {
            "node": "Get Summary",
            "type": "main",
            "index": 0
          },
          {
            "node": "Get Transcript",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get Transcript": {
      "main": [
        [
          {
            "node": "Filter ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter ": {
      "main": [
        [
          {
            "node": "Divide as Speakers ",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Divide as Speakers ": {
      "main": [
        [
          {
            "node": "Objections",
            "type": "main",
            "index": 0
          },
          {
            "node": "Questions",
            "type": "main",
            "index": 0
          },
          {
            "node": "Emotional Triggers",
            "type": "main",
            "index": 0
          },
          {
            "node": "Transformation Stories",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Single Array": {
      "main": [
        [
          {
            "node": "Carousal",
            "type": "main",
            "index": 0
          },
          {
            "node": "Linkedin Post",
            "type": "main",
            "index": 0
          },
          {
            "node": "Email",
            "type": "main",
            "index": 0
          },
          {
            "node": "Story Sequence",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Transformation Stories": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 3
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "59ce237a-58e1-4e59-bf68-134badae96d5",
  "triggerCount": 0,
  "shared": [
    {
      "createdAt": "2025-10-21T11:50:07.078Z",
      "updatedAt": "2025-10-21T11:50:07.078Z",
      "role": "workflow:owner",
      "workflowId": "xOl5dqbr93rnsZsN",
      "projectId": "VDyoKZWt3i5eAZSO"
    }
  ],
  "tags": []
}