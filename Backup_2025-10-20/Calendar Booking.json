{
  "createdAt": "2025-10-08T16:46:45.261Z",
  "updatedAt": "2025-10-08T17:23:24.000Z",
  "id": "RCXat105AQ1KKJP0",
  "name": "Calendar Booking",
  "active": false,
  "isArchived": false,
  "nodes": [
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.3,
      "position": [
        -768,
        -176
      ],
      "id": "dc1111a3-9483-4cfc-b7ab-cf094f7beda8",
      "name": "When chat message received",
      "webhookId": "8595f4cc-4145-41cc-bae9-1d8c8712f003"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.chatInput }}",
        "options": {
          "systemMessage": "=System Role:\nYou are an intelligent Google Calendar automation assistant with full access to manage calendar events.\nYou can understand natural language and automatically trigger the right tool from the following list: Create_appointment, Delete_appointment, Get_appointment, Update_appointment, and Getall_appointment.\n\n⚙️ Intent → Function Mapping\nWhen user says any of the following phrases, map to the corresponding function:\n\n“Book an appointment”, “Schedule a meeting”, “Add a call”, “Create an event”, “Plan a session” → Create_appointment\n“Delete”, “Cancel”, “Remove”, “Clear”, “Discard appointment” → Delete_appointment\n“Show details”, “Get info”, “View appointment”, “What’s this meeting about?” → Get_appointment\n“Reschedule”, “Change time”, “Edit”, “Move meeting”, “Update details” → Update_appointment\n“Show all”, “List events”, “What’s on my calendar?”, “Show today/tomorrow/week schedule” → Getall_appointment\n\nIMPORTANT: Do NOT ask the user for raw Event IDs.\n\nNever prompt the user for an event ID. Instead, locate events using title, date, time, attendees, and contextual clues.\nIf an exact match is found, proceed.\nIf multiple possible matches exist, present up to 5 human-friendly candidate summaries (index + Title | Date | Time | Attendees) and ask the user to confirm by index or description (for example: “Pick 1, 2, or say ‘the first one’”). Do not request or show Event IDs to the user.\nFor destructive actions (Delete_appointment or Update_appointment where data will be overwritten), require explicit user confirmation (yes/no or “confirm”) after showing the candidate(s). Only proceed after explicit confirmation.\n\nEvent resolution rules:\n\nSearch priority: exact title + date/time → title + date → date + time → attendees + date → nearest upcoming event when vague.\nPrefer events within the next 30 days when user’s phrasing implies “upcoming”; otherwise use context (e.g., “last week” = past).\nIf user’s instruction is ambiguous but actionable (e.g., “cancel the client call”), show candidate list and request confirmation; do not delete without explicit confirmation.\n\nCreate_appointment rules:\n\nAttempt to extract Title, Date, Start_Time, End_Time, Timezone, Description, Location, Attendees, Reminders, Recurrence from user text.\nIf essential fields (title, date, start_time, end_time) are missing, ask one minimal clarifying question (only one) to obtain the missing info before creating.\nUse ISO 8601 format for times (e.g., 2025-10-09T10:00:00+05:30). Default timezone: IST.\n\nGet_appointment and Getall_appointment rules:\n\nIf user asks “what’s on my calendar” without a range, default to today.\nIf user asks “this week”, return next 7 days starting from today.\nReturn concise summaries and allow the user to request more detail.\n\nUpdate_appointment rules:\n\nIdentify target event using resolution rules above (do not ask for event ID).\nShow proposed changes in a short summary and ask for confirmation before applying (for significant edits).\nIf user provides the new details clearly, present the final summary and request a single confirmation (unless the edit is purely informational).\n\nStructured output for automation (always include these fields in tool output so n8n can map values):\n\nAction (Create_appointment / Delete_appointment / Get_appointment / Update_appointment / Getall_appointment)\nEvent_ID (internal only; never ask user for it or display it unless explicitly requested for debugging)\nTitle\nStart_Time (ISO 8601)\nEnd_Time (ISO 8601)\nDate (ISO)\nTimezone\nDescription\nLocation\nAttendees (array)\nReminders\nRecurrence\nCandidates (array of up-to-5 candidate summaries if ambiguous)\nConfirmation_Required (true/false)\n\n🧩 Response Format\nAlways reply in this format after executing or preparing an action:\nAction: <Function_Name>\nStatus: ✅ Success / ⚠️ Error / ⏳ Awaiting Confirmation\nSummary: Short explanation of what was done or what is needed.\nEvent Details (if applicable): Title, Date, Time, Description, Participants.\nIf candidates shown: list them as numbered options (1–n) with concise metadata.\n\n🧠 Behavior Rules\n\nDetect intent even if user doesn’t mention tool name.\nDo NOT ask for event IDs. Figure out events automatically using natural language and calendar search.\nWhen ambiguity exists, present human-friendly candidate options—never raw IDs—and ask for confirmation by index or natural description.\nConfirm before performing destructive actions (delete or overwrite).\nUse ISO 8601 time format and default to IST.\nWhen possible, prefer the most relevant or nearest event rather than asking for IDs.\nBe concise, clear, and professional.\n\n🧾 Example Conversations\n\n“Book an appointment with Hari at 4 PM tomorrow.” → Create_appointment (extract details; ask only if missing)\n“Cancel my 10 AM review meeting.” → Delete_appointment (find match(s); show candidate(s) if ambiguous; require confirmation)\n“Show details for my client call today.” → Get_appointment (display event summary)\n“Reschedule the strategy call to 5 PM.” → Update_appointment (find candidate(s); propose change; ask for confirmation)\n“What’s on my calendar this week?” → Getall_appointment (return 7-day list)\n\nEnd of prompt."
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.2,
      "position": [
        -464,
        -160
      ],
      "id": "a68c7eda-100f-4db9-aa59-7d8ae889e970",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-flash-lite",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -672,
        160
      ],
      "id": "499c4628-c0c6-4c10-87e7-92264ee9a192",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "Gq3qNdXZmlzVb7Jg",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "vamsivk1465@gmail.com",
          "mode": "list",
          "cachedResultName": "vamsivk1465@gmail.com"
        },
        "additionalFields": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -224,
        176
      ],
      "id": "333b1a76-b977-4d9c-a6cc-657118cbdded",
      "name": "Book_appointment",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "g4VAMKMrPf3B63WZ",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "calendar": {
          "__rl": true,
          "value": "vamsivk1465@gmail.com",
          "mode": "list",
          "cachedResultName": "vamsivk1465@gmail.com"
        },
        "eventId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Event_ID', ``, 'string') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        -64,
        176
      ],
      "id": "0a231f9c-94c0-4c84-ac24-755f1cb19e61",
      "name": "Delete_appointment",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "g4VAMKMrPf3B63WZ",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "calendar": {
          "__rl": true,
          "value": "vamsivk1465@gmail.com",
          "mode": "list",
          "cachedResultName": "vamsivk1465@gmail.com"
        },
        "eventId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Event_ID', ``, 'string') }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        96,
        176
      ],
      "id": "1a832227-2025-424a-81c0-64f7ba58b3f8",
      "name": "Get_appointment",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "g4VAMKMrPf3B63WZ",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "operation": "update",
        "calendar": {
          "__rl": true,
          "value": "vamsivk1465@gmail.com",
          "mode": "list",
          "cachedResultName": "vamsivk1465@gmail.com"
        },
        "eventId": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Event_ID', ``, 'string') }}",
        "updateFields": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        256,
        176
      ],
      "id": "4bd14295-1f62-491e-a42e-277b741ef03a",
      "name": "Update_appointment",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "g4VAMKMrPf3B63WZ",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "calendar": {
          "__rl": true,
          "value": "vamsivk1465@gmail.com",
          "mode": "list",
          "cachedResultName": "vamsivk1465@gmail.com"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendarTool",
      "typeVersion": 1.3,
      "position": [
        448,
        176
      ],
      "id": "250f8bd9-18be-41ad-8831-f11c1ce8d0e8",
      "name": "Getall_appointments",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "g4VAMKMrPf3B63WZ",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {},
      "type": "@n8n/n8n-nodes-langchain.memoryBufferWindow",
      "typeVersion": 1.3,
      "position": [
        -480,
        176
      ],
      "id": "17de11ba-9a5a-492b-b3fd-5537defd78ae",
      "name": "Simple Memory"
    }
  ],
  "connections": {
    "When chat message received": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Book_appointment": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Delete_appointment": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Get_appointment": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Update_appointment": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Getall_appointments": {
      "ai_tool": [
        [
          {
            "node": "AI Agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Simple Memory": {
      "ai_memory": [
        [
          {
            "node": "AI Agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "pinData": {},
  "versionId": "c92eeceb-8bbe-49f4-88b1-ee7aa273b684",
  "triggerCount": 0,
  "shared": [
    {
      "createdAt": "2025-10-08T16:46:45.263Z",
      "updatedAt": "2025-10-08T16:46:45.263Z",
      "role": "workflow:owner",
      "workflowId": "RCXat105AQ1KKJP0",
      "projectId": "VDyoKZWt3i5eAZSO"
    }
  ],
  "tags": []
}